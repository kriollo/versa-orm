name: PHP Compatibility Matrix

on:
  push: {}
  pull_request: {}

permissions:
  contents: read
  issues: write

jobs:
  php-compatibility-matrix:
    name: PHP Compatibility Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ '8.1', '8.2', '8.3' ]
        coverage: [ false ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo, json, mbstring, xml
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --optimize-autoloader

      - name: Run PHP Compatibility Tests (PHPUnit)
        run: |
          echo "Running PHPUnit compatibility tests for PHP ${{ matrix.php-version }}..."
          ./vendor/bin/phpunit --configuration phpunit-php-compatibility.xml \
            --testsuite "PHP Compatibility Tests" \
            --log-junit tests/reports/php-compatibility/junit-php${{ matrix.php-version }}.xml \
            --testdox-html tests/reports/php-compatibility/testdox-php${{ matrix.php-version }}.html \
            --testdox-text tests/reports/php-compatibility/testdox-php${{ matrix.php-version }}.txt
        continue-on-error: true

      - name: Run PHP Compatibility CLI Tool
        run: |
          echo "Running PHP compatibility CLI tool..."
          php tests/bin/run-php-compatibility.php \
            --output=tests/reports/php-compatibility \
            --format=both \
            --verbose
        continue-on-error: true

      - name: Generate Coverage Report
        if: matrix.coverage
        run: |
          echo "Generating coverage report for PHP ${{ matrix.php-version }}..."
          ./vendor/bin/phpunit --configuration phpunit-php-compatibility.xml \
            --coverage-html tests/reports/php-compatibility/coverage-html-php${{ matrix.php-version }} \
            --coverage-xml tests/reports/php-compatibility/coverage-xml-php${{ matrix.php-version }} \
            --coverage-clover tests/reports/php-compatibility/clover-php${{ matrix.php-version }}.xml \
            --coverage-text=tests/reports/php-compatibility/coverage-php${{ matrix.php-version }}.txt
        continue-on-error: true

      - name: Validate Test Results
        run: |
          echo "=== Test Results Validation ==="
          JUNIT=tests/reports/php-compatibility/junit-php${{ matrix.php-version }}.xml
          if [ -f "$JUNIT" ]; then
            echo "‚úì PHPUnit results found: $JUNIT"
            php .github/scripts/validate-junit.php "$JUNIT"
          else
            echo "‚ùå No PHPUnit results found: $JUNIT"
            exit 1
          fi

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: php-compatibility-results-${{ matrix.php-version }}
          path: |
            tests/reports/php-compatibility/
            tests/logs/
          retention-days: 30

      - name: Upload Coverage to Codecov
        if: matrix.coverage && success()
        uses: codecov/codecov-action@v3
        with:
          file: tests/reports/php-compatibility/clover-php${{ matrix.php-version }}.xml
          flags: php-compatibility,php${{ matrix.php-version }}
          name: php-compatibility-${{ matrix.php-version }}
          fail_ci_if_error: false

  consolidate-results:
    name: Consolidate Matrix Results
    runs-on: ubuntu-latest
    needs: php-compatibility-matrix
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: pdo, json, mbstring, xml
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --optimize-autoloader

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Consolidate Results
        run: |
          echo "=== Consolidating PHP Compatibility Results ==="
          mkdir -p consolidated-reports
          php .github/scripts/consolidate-matrix.php

      - name: Upload Consolidated Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: php-compatibility-consolidated
          path: |
            consolidated-reports/
            artifacts/
          retention-days: 90

      - name: Comment PR with Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            if (fs.existsSync('consolidated-reports/matrix-summary.json')) {
              const results = JSON.parse(fs.readFileSync('consolidated-reports/matrix-summary.json', 'utf8'));

              let comment = '## üß™ PHP Compatibility Matrix Results\n\n';
              comment += '| PHP Version | Tests | Failures | Errors | Success Rate | Time |\n';
              comment += '|-------------|-------|----------|--------|--------------|------|\n';

              for (const [version, data] of Object.entries(results.versions)) {
                const successRate = data.success_rate.toFixed(1);
                const time = data.time.toFixed(2);
                const status = data.failures === 0 && data.errors === 0 ? '‚úÖ' : '‚ùå';
                comment += `| ${status} PHP ${version} | ${data.tests} | ${data.failures} | ${data.errors} | ${successRate}% | ${time}s |\n`;
              }

              const summary = results.summary;
              const overallStatus = summary.total_failures === 0 && summary.total_errors === 0 ? '‚úÖ' : '‚ùå';
              const overallSuccessRate = summary.overall_success_rate.toFixed(1);
              const totalTime = summary.total_time.toFixed(2);

              comment += '|-------------|-------|----------|--------|--------------|------|\n';
              comment += `| ${overallStatus} **TOTAL** | ${summary.total_tests} | ${summary.total_failures} | ${summary.total_errors} | ${overallSuccessRate}% | ${totalTime}s |\n\n`;

              if (summary.total_failures === 0 && summary.total_errors === 0) {
                comment += 'üéâ All PHP compatibility tests passed!\n';
              } else {
                comment += '‚ö†Ô∏è Some PHP compatibility tests failed. Please review the detailed results.\n';
              }

              comment += `\n*Generated at: ${results.timestamp}*`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
